#Reference: https://www.smarthomebeginner.com/docker-home-media-server-2018-basic
#Reference: https://www.smarthomebeginner.com/traefik-reverse-proxy-tutorial-for-docker/
#Requirement: Set environmental variables: USERDIR, PUID, PGID, MYSQL_ROOT_PASSWORD, and TZ as explained in the reference.

version: "3.3"
services:




# Glances
  glances:
    image: vimagick/glances
    container_name: glances
#    ports:
#      - "61208:61208"
    volumes:
      - ./data:/etc/glances
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./:/main
      - ${SERVER1}/:/server1
      - ${SERVER2}/:/server2
      - ${SERVER3}/:/server3
      - ${SERVER4}/:/server4
    environment:
      - GLANCES_OPT=-w
    pid: 'host'
    restart: always
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=glances"
      - "traefik.frontend.rule=Host:glances.${DOMAINNAME}"
      - "traefik.port=61208"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# Watchtower
  watchtower:
    container_name: watchtower
    restart: always
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup




# Portainer
  portainer:
    image: portainer/portainer-ce
    hostname: portainer
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
#    ports:
#      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${USERDIR}/docker/portainer/data:/data
      - ${USERDIR}/docker/shared:/shared
    environment:
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# SABnzbd
  sabnzbd:
    image: "linuxserver/sabnzbd"
    hostname: sabnzbd
    container_name: "sabnzbd"
    volumes:
      - ${USERDIR}/docker/sabnzbd:/config
      - ${USERDIR}/docker/shared:/shared
      - ${USERDIR}/Downloads/complete:/downloads
      - ${USERDIR}/Downloads/incomplete:/incomplete-downloads
      - ${SERVER1}/:/server1
      - ${SERVER2}/:/server2
      - ${SERVER3}/:/server3
      - ${SERVER4}/:/server4
#    ports:
#        - "8080:8080"
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sabnzbd"
      - "traefik.frontend.rule=Host:sabnzbd.${DOMAINNAME}"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# Transmission
  transmission:
    image: "linuxserver/transmission"
    hostname: transmission
    container_name: "transmission"
    volumes:
      - ${USERDIR}/docker/transmission:/config
      - ${USERDIR}/Downloads:/downloads
#    ports:
#        - "9091:9091"
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - USER=${TRANSMISSION_USERNAME}
      - PASS=${TRANSMISSION_PASSWORD}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=transmission"
      - "traefik.frontend.rule=Host:transmission.${DOMAINNAME}"
      - "traefik.port=9091"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# Radarr
  radarr:
    image: "linuxserver/radarr:develop"
    hostname: radarr
    container_name: "radarr"
    volumes:
      - ${USERDIR}/docker/radarr:/config
      - ${USERDIR}/Downloads/complete:/downloads
      - ${SERVER1}/movies:/movies
      - ${SERVER4}/4K:/4K
      - "/etc/localtime:/etc/localtime:ro"
      - ${USERDIR}/docker/shared:/shared
      - ${DATA}/:/data
#    ports:
#      - "7878:7878"
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=radarr"
      - "traefik.frontend.rule=Host:radarr.${DOMAINNAME}"
      - "traefik.port=7878"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# Radarr 4K
  radarr4k:
    image: "linuxserver/radarr:develop"
    hostname: radarr4k
    container_name: "radarr4k"
    volumes:
      - ${USERDIR}/docker/radarr4k:/config
      - ${USERDIR}/Downloads/complete:/downloads
      - ${SERVER1}/movies:/movies
      - ${SERVER4}/4K:/4K
      - "/etc/localtime:/etc/localtime:ro"
      - ${USERDIR}/docker/shared:/shared
#    ports:
#      - "7878:7879"
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:radarr
      - TP_ADDON=radarr-4k-logo
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=radarr4k"
      - "traefik.frontend.rule=Host:radarr4k.${DOMAINNAME}"
      - "traefik.port=7878"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# Sonarr
  sonarr:
    image: "linuxserver/sonarr:latest"
    hostname: sonarr
    container_name: "sonarr"
    volumes:
      - ${USERDIR}/docker/sonarr:/config
      - ${USERDIR}/Downloads/complete:/downloads
      - ${SERVER2}/tvshows:/tv
      - ${SERVER4}/4K:/4K
      - "/etc/localtime:/etc/localtime:ro"
      - ${USERDIR}/docker/shared:/shared
#    ports:
#        - "8989:8989"
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sonarr"
      - "traefik.frontend.rule=Host:sonarr.${DOMAINNAME}"
      - "traefik.port=8989"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# Sonarr 4K
  sonarr4k:
    image: "linuxserver/sonarr:latest"
    hostname: sonarr4k
    container_name: "sonarr4k"
    volumes:
      - ${USERDIR}/docker/sonarr4k:/config
      - ${USERDIR}/Downloads/complete:/downloads
      - ${SERVER2}/tvshows:/tv
      - ${SERVER4}/4K:/4K
      - "/etc/localtime:/etc/localtime:ro"
      - ${USERDIR}/docker/shared:/shared
#    ports:
#        - "8989:8990"
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:sonarr
      - TP_ADDON=sonarr-4k-logo
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sonarr4k"
      - "traefik.frontend.rule=Host:sonarr4k.${DOMAINNAME}"
      - "traefik.port=8989"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# Prowlarr
  prowlarr:
    image: "linuxserver/prowlarr:nightly"
    hostname: prowlarr
    container_name: "prowlarr"
    volumes:
      - ${USERDIR}/docker/prowlarr:/config
      - "/etc/localtime:/etc/localtime:ro"
#    ports:
#        - "9696:9696"
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - DOCKER_MODS=ghcr.io/gilbn/theme.park:prowlarr
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=prowlarr"
      - "traefik.frontend.rule=Host:prowlarr.${DOMAINNAME}"
      - "traefik.port=9696"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# Plex
  plexms:
    container_name: plexms
    restart: always
    image: "plexinc/pms-docker:plexpass"
    volumes:
      - ${USERDIR}/docker/plexms:/config
      - ${RAMDRIVE}/:/transcode
      - /mnt/:/media
      - ${USERDIR}/docker/shared:/shared
      - ${USERDIR}/docker/plexms/neo.sh:/etc/cont-init.d/neo.sh
    ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
    environment:
      - TZ=${TZ}
      - HOSTNAME="Docker Plex"
      - PLEX_CLAIM="claim-2pwqm8YiyaxEKWjinrFN"
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}
      - ADVERTISE_IP="http://192.168.1.10:32400/"
    devices:
      - /dev/dri/:/dev/dri/
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=plexms"
      - "traefik.frontend.rule=Host:plex.${DOMAINNAME}"
      - "traefik.port=32400"
      - "traefik.protocol=http"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# Jellyfin
  jellyfin:
    container_name: jellyfin
    restart: always
    image: "linuxserver/jellyfin"
    volumes:
      - ${USERDIR}/docker/jellyfin:/config
      - ${RAMDRIVE}/:/transcode
      - /mnt/:/media
      - ${USERDIR}/docker/shared:/shared
    ports:
      - "8096:8096/tcp"
      - "8920:8920/tcp"
      - "7359:7359/udp"
    environment:
      - JELLYFIN_PublishedServerUrl=https://jellyfin.paulamato.com.au
      - DOCKER_MODS=linuxserver/mods:jellyfin-opencl-intel
    devices:
      - /dev/dri/:/dev/dri/
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=jellyfin"
      - "traefik.frontend.rule=Host:jellyfin.${DOMAINNAME}"
      - "traefik.port=8096"
      - "traefik.protocol=http"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# UniFi Stats
  unifistats:
    build: 
      context: ${USERDIR}/docker/unifistats/bin/webserver
    container_name: 'unifistats'
    restart: 'always'
#    ports:
#      - "8888:80"
    volumes: 
      - ${USERDIR}/docker/unifistats/www:/var/www/html
      - ${USERDIR}/docker/unifistats/config/php/php.ini:/usr/local/etc/php/php.ini
      - ${USERDIR}/docker/unifistats/config/vhosts:/etc/apache2/sites-enabled
      - ${USERDIR}/docker/unifistats/logs/apache2:/var/log/apache2
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=unifistats"
      - "traefik.frontend.rule=Host:unifistats.${DOMAINNAME}"
      - "traefik.port=80"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# Tautulli
  tautulli:
    container_name: tautulli
    restart: always
    image: linuxserver/tautulli
    volumes:
      - ${USERDIR}/docker/tautulli/config:/config
      - '${USERDIR}/docker/plexms/Library/Application Support/Plex Media Server/Logs:/logs:ro'
      - ${USERDIR}/docker/shared:/shared
#    ports:
#      - "8181:8181"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=tautulli"
      - "traefik.frontend.rule=Host:tautulli.${DOMAINNAME}"
      - "traefik.port=8181"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# UniFi
  unifi:
    hostname: unifi
    image: linuxserver/unifi-controller:latest
    restart: always
    container_name: "unifi"
    volumes:
      - ${USERDIR}/docker/unifi:/config
      - ${USERDIR}/docker/shared:/shared
    ports:
      - target: 3478
        published: 3478
        protocol: udp
        mode: host
      - target: 10001
        published: 10001
        protocol: udp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
      - target: 8081
        published: 8081
        protocol: tcp
        mode: host
      - target: 8443
        published: 8443
        protocol: tcp
        mode: host
      - target: 8880
        published: 8880
        protocol: tcp
        mode: host
      - target: 6789
        published: 6789
        protocol: tcp
        mode: host
    networks:
      - traefik_proxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.tags=frontend"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.admin.backend=unifi"
      - "traefik.admin.frontend.rule=Host:unifi.${DOMAINNAME}"
      - "traefik.admin.port=8443"
      - "traefik.admin.protocol=https"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
#      - "traefik.frontend.headers.frameDeny=true"
      - "traefik.frontend.headers.customResponseHeaders=Access-Control-Allow-Origin:*"




# Overseerr
  overseerr:
    container_name: overseerr
    restart: always
    image: sctx/overseerr:latest
    volumes:
      - ${USERDIR}/docker/overseerr:/app/config
      - ${USERDIR}/docker/shared:/shared
#    ports:
#      - "5055:5055"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=overseerr"
      - "traefik.frontend.rule=Host:overseerr.${DOMAINNAME}"
#      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefix: /overseerr"
      - "traefik.port=5055"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# Bazarr
  bazarr:
    container_name: bazarr
    restart: always
    image: linuxserver/bazarr:latest
    volumes:
      - ${USERDIR}/docker/bazarr:/config
      - ${SERVER1}/movies:/movies
      - ${SERVER2}/tvshows:/tv
#    ports:
#      - "6767:6767"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=bazarr"
      - "traefik.frontend.rule=Host:bazarr.${DOMAINNAME}"
#      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefix: /bazarr"
      - "traefik.port=6767"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# Bazarr4k
  bazarr4k:
    container_name: bazarr4k
    restart: always
    image: linuxserver/bazarr:latest
    volumes:
      - ${USERDIR}/docker/bazarr4k:/config
      - ${SERVER4}/4K/movies:/movies
      - ${SERVER4}/4K/tvshows:/tv
#    ports:
#      - "6767:6767"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=bazarr4k"
      - "traefik.frontend.rule=Host:bazarr4k.${DOMAINNAME}"
#      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefix: /bazarr4k"
      - "traefik.port=6767"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"




# Heimdall
  heimdall:
    container_name: heimdall
    restart: unless-stopped
    image: linuxserver/heimdall
    volumes:
      - ${USERDIR}/docker/heimdall:/config
      - ${USERDIR}/docker/shared:/shared
#    ports:
#      - "80:80"
#      - "443:443"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=heimdall"
      - "traefik.frontend.rule=Host:heimdall.${DOMAINNAME}"
#      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefix: /heimdall"
      - "traefik.port=80"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"





# Scrypted
  scrypted:
    container_name: scrypted
    restart: unless-stopped
    image: koush/scrypted
    volumes:
      - ${USERDIR}/docker/scrypted:/server/volume
    ports:
      - 10080:10080/tcp
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    network_mode: host
      
      
      
      

# Tdarr
  tdarr:
    container_name: tdarr
    restart: unless-stopped
    image: haveagitgat/tdarr:latest
    volumes:
      - ${USERDIR}/docker/tdarr/server:/app/server
      - ${USERDIR}/docker/tdarr/configs:/app/configs
      - ${USERDIR}/docker/tdarr/logs:/app/logs
      - ${SERVER2}/tvshows:/tv
      - ${SERVER1}/movies:/movies
      - ${USERDIR}/transcode_cache:/temp
#    ports:
#      - "80:80"
#      - "443:443"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=002
      - serverIP=172.19.0.228
      - serverPort=8266
      - webUIPort=8265
    networks:
#     - traefik_proxy
      traefik_proxy:
        ipv4_address: 172.19.0.228
    labels:
      - "traefik.enable=true"
      - "traefik.backend=tdarr"
      - "traefik.frontend.rule=Host:tdarr.${DOMAINNAME}"
#      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefix: /tdarr"
      - "traefik.port=8265"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
#      - "traefik.frontend.whiteList.sourceRange=192.168.0.0/16,122.199.61.31"




# Tdarr-Node
  tdarr-node:
    container_name: tdarr-node
    restart: unless-stopped
    image: haveagitgat/tdarr_node:latest
    volumes:
      - ${USERDIR}/docker/tdarr/configs:/app/configs
      - ${USERDIR}/docker/tdarr/logs:/app/logs
      - ${SERVER2}/tvshows:/tv
      - ${SERVER1}/movies:/movies
      - ${USERDIR}/transcode_cache:/temp
#    ports:
#      - "80:80"
#      - "443:443"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - UMASK_SET=002
      - nodeID=MainNode
      - nodeIP=172.19.0.227
      - nodePort=8267
      - serverIP=172.19.0.228
      - serverPort=8266
    devices:
      - /dev/dri/:/dev/dri/
    networks:
#     - traefik_proxy
      traefik_proxy:
        ipv4_address: 172.19.0.227





# Homebridge
  homebridge:
    container_name: homebridge
    restart: unless-stopped
    image: oznu/homebridge:latest
    volumes:
      - ${USERDIR}/docker/homebridge:/homebridge
    ports:
      - 51827:51827/tcp
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - HOMEBRIDGE_CONFIG_UI=1
      - HOMEBRIDGE_CONFIG_UI_PORT=8787
    network_mode: host





# Pi-hole
  pihole:
    container_name: pihole
    domainname: docker
    hostname: pihole
    image: pihole/pihole:latest
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      # - '67:67/udp'
      - '8182:80'
      - '8183:443'
    restart: unless-stopped
    volumes:
      - ${USERDIR}/docker/pihole/pihole:/etc/pihole
      - ${USERDIR}/docker/pihole/pihole.log:/var/log/pihole.log
      - ${USERDIR}/docker/pihole/dnsmasq.d:/etc/dnsmasq.d
    cap_add:
      - NET_ADMIN
    environment:
      - ServerIP=${SERVER_IP}
      - PROXY_LOCATION=pihole
      - VIRTUAL_HOST=pihole.${DOMAINNAME}
      - VIRTUAL_PORT=80
      - TZ=${TZ}
      - WEBPASSWORD=${PIHOLEWEBPASSWORD}
      - DNS1=127.0.0.1
      - DNS2=8.8.8.8
    labels:
      - "traefik.enable=true"
      - "traefik.backend=pihole"
      - "traefik.port=80"
      - "traefik.frontend.rule=HostRegexp:pihole.${DOMAINNAME},{catchall:.*}"
      - "traefik.frontend.priority=1"
      - traefik.frontend.headers.SSLRedirect=true
      - traefik.frontend.headers.STSSeconds=315360000
      - traefik.frontend.headers.browserXSSFilter=true
      - traefik.frontend.headers.contentTypeNosniff=true
      - traefik.frontend.headers.forceSTSHeader=true
      - traefik.frontend.headers.SSLHost=${DOMAINNAME}
      - traefik.frontend.headers.STSIncludeSubdomains=true
      - traefik.frontend.headers.STSPreload=true
      - traefik.frontend.headers.frameDeny=true




# Traefik
  traefik:
    hostname: traefik
    image: traefik:v1.7
    container_name: traefik
    restart: always
    domainname: ${DOMAINNAME}
    networks:
      - default
      - traefik_proxy
    ports:
      - "80:80"
      - "443:443"
#      - "XXXX:8080"
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=example.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${USERDIR}/docker/traefik:/etc/traefik
      - ${USERDIR}/docker/shared:/shared




# Node Sonos
  node-sonos:
    container_name: air-node-sonos
    image: chrisns/docker-node-sonos-http-api
    network_mode: host
    volumes:
      - "./cache:/app/cache"
      - "./clips:/app/static/clips"
      - "./settings:/app/settings"
      - "./presets:/app/presets"
    restart: always




networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
